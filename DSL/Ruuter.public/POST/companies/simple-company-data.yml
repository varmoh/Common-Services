declaration:
  call: declare
  version: 0.1
  description: "Gets information for a business from the Business Register"
  method: post
  accepts: json
  returns: json
  namespace: common-services
  allowlist:
    params:
      - field: chatId
        type: string
        description: "Parameter 'chatId'"
      - field: authorId
        type: string
        description: "Parameter 'authorId'"   
      - field: message
        type: string
        description: "Registry code of the requested company"
      - field: reg_code
        type: string
        description: "Registry code of the requested company"
      - field: username
        type: string
        description: "X-Road API username"
      - field: password
        type: string
        description: "X-Road API password"

extract_body:
  assign:
    message: ${incoming.body.input[0]}
    chatId: ${incoming.body.chatId}
    authorId: ${incoming.body.authorId}

getSimpleCompanyData:
  call: http.post
  args:
    url: "[#XTR]/ar/lihtandmed_v3"
    body:
      reg_code: "${message}" 
      username: "[#XTR_AR_USERNAME]" 
      password: "[#XTR_AR_PASSWORD]"
  result: simpleCompanyData
  next: mapSimpleCompanyData

mapSimpleCompanyData:
  call: http.post
  args:
    url: "[#DMAPPER]/common-services/hbs/get-business-register-simple-company-data"
    headers:
      type: "json"
    body:
      keha: ${simpleCompanyData.response.body.lihtandmed_v3Response.keha.ettevotjad.item}
  result: mappedSimpleCompanyData
  next: assign_response

assign_response:
  assign:
    res: ${mappedSimpleCompanyData.response.body}
  next: format_messages

format_messages:
  call: http.post
  args:
    url: "[#DMAPPER]/common-services/hbs/bot_responses_to_messages"
    headers:
      type: json
    body:
      data:
        {
          "botMessages": "${[res]}",
          "chatId": "${chatId}",
          "authorId": "${authorId}",
          "authorFirstName": "",
          "authorLastName": "",
          "authorTimestamp": "${new Date().toISOString()}",
          "created": "${new Date().toISOString()}",
        }
  result: formatted_messages_res

return_result:
  return: ${formatted_messages_res.response.body}
