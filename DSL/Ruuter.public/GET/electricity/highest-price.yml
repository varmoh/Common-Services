declaration:
  call: declare
  version: 0.1
  name: "Electricity Price Service"
  description: |
    This service fetches the Nordpool electricity prices for a user-specified date and returns the highest price.
  method: get
  returns: json

# Prepare Dates based on userDate
prepareDates:
  assign:
    chatId: ${incoming.params.chatId}
    authorId: ${incoming.params.authorId}
    userDate: ${incoming.params.input[0] || new Date().toISOString().split('T')[0]}  # yyyy-mm-dd
    startDateTime: ${new Date(new Date(userDate).getTime() - 24 * 60 * 60 * 1000).toISOString().split('T')[0] + "T21:00:00.000Z"}
    endDateTime: ${userDate + "T20:59:59.000Z"}
  next: getPriceForPeriod

getPriceForPeriod:
  call: http.get
  args:
    url: https://dashboard.elering.ee/api/nps/price
    query:
      start: ${startDateTime}
      end: ${endDateTime}
  result: eleringToday
  next: assignVariables

assignVariables:
  assign:
    maxPrice: ${eleringToday.response.body.data.ee.sort((a, b) => b.price - a.price)[0].price}  # get highest price
    maxPriceTimestamp: ${eleringToday.response.body.data.ee.sort((a, b) => b.price - a.price)[0].timestamp}  # get timestamp for highest price

    tallinnOffset: 10800  # Tallinn is UTC+3 during DST (3 hours in seconds)
    adjustedTimestamp: ${maxPriceTimestamp + tallinnOffset} 
    adjustedHour: ${Math.floor((adjustedTimestamp % 86400) / 3600)}
    timeVar: ${("0" + adjustedHour).slice(-2) + ":00"}
  next: assignResponse

assignResponse:
  assign:
    res: {
       "result": "Kõrgeim elektrihind on ${maxPrice}, kell on ${timeVar}, kuupäeval ${userDate}"
    }
  next: formatMessages

# format throgh DM bot response to messages
formatMessages:
  call: http.post
  args:
    url: "[#DMAPPER]/common-services/hbs/bot_responses_to_messages"
    headers:
      type: json
    body:
      data:
        {
          "botMessages": "${[res]}",
          "chatId": "${chatId}",
          "authorId": "${authorId}",
          "authorFirstName": "",
          "authorLastName": "",
          "authorTimestamp": "${new Date().toISOString()}",
          "created": "${new Date().toISOString()}",
        }
  result: formatMessage

return_result:
  return: ${formatMessage.response.body}

