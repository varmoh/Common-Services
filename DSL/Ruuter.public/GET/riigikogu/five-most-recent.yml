declaration:
  call: declare
  version: 0.1
  name: " most recent voting results service"
  description: "Provides information for 5 most-recent voting results"
  method: get
  returns: json
  namespace:  common-services

prepareVariables:
  assign:
    chatId: ${incoming.params.chatId}
    authorId: ${incoming.params.authorId}
    offSet: 90 # get time period with enough data (90 days)
    end: ${new Date().toISOString().split('T')[0]}
    start: ${new Date(new Date(end).setDate(new Date(end).getDate() - offSet)).toISOString().split('T')[0]} 
  next: makeAPIRequest

makeAPIRequest:
  call: http.get
  args:
    url: "https://api.riigikogu.ee/api/votings?endDate=${end}&lang=ET&startDate=${start}"
    headers:
      Accept: "application/json"
  result: votingData
  next: votingDataFormatting

# Extracts the 5 most recent public votings related to drafts, sorted by date
votingDataFormatting:
  assign:
    votingDetails: ${votingData.response.body
      .flatMap(session => session.votings)
      .filter(voting => voting.type.value === "Avalik" && voting.relatedDraft)
      .sort((voting1, voting2) => new Date(voting2.startDateTime) - new Date(voting1.startDateTime))
      .slice(0, 5)}
  next: formatResult

formatResult:
  assign:
    first: ${votingDetails[0]}
    second: ${votingDetails[1]}
    third: ${votingDetails[2]}
    fourth: ${votingDetails[3]}
    fifth: ${votingDetails[4]}
    res: {
      "result": "Viis viimast hääletustulemust:
      
      1. '${first.relatedDraft.title}'
          
          'Kohal: ${first.present}, Puudus: ${first.absent}, Poolt: ${first.inFavor} Vastu: ${first.against}, Erapooletu: ${first.neutral}, Ei hääletanud: ${first.abstained}'
      
      2. '${second.relatedDraft.title}'

          'Kohal: ${second.present}, Puudus: ${second.absent}, Poolt: ${second.inFavor} Vastu: ${second.against}, Erapooletu: ${second.neutral}, Ei hääletanud: ${second.abstained}'
      
      3. '${third.relatedDraft.title}'

          'Kohal: ${third.present}, Puudus: ${third.absent}, Poolt: ${third.inFavor} Vastu: ${third.against}, Erapooletu: ${third.neutral}, Ei hääletanud: ${third.abstained}'
      
      4. '${fourth.relatedDraft.title}'

          'Kohal: ${fourth.present}, Puudus: ${fourth.absent}, Poolt: ${fourth.inFavor} Vastu: ${fourth.against}, Erapooletu: ${fourth.neutral}, Ei hääletanud: ${fourth.abstained}'
      
      5. '${fifth.relatedDraft.title}'

          'Kohal: ${fifth.present}, Puudus: ${fifth.absent}, Poolt: ${fifth.inFavor} Vastu: ${fifth.against}, Erapooletu: ${fifth.neutral}, Ei hääletanud: ${fifth.abstained}'"
    }
  next: formatMessages

# format throgh DM bot response to messages
formatMessages:
  call: http.post
  args:
    url: "[#DMAPPER]/common-services/hbs/bot_responses_to_messages"
    headers:
      type: json
    body:
      data:
        {
          "botMessages": "${[res]}",
          "chatId": "${chatId}",
          "authorId": "${authorId}",
          "authorFirstName": "",
          "authorLastName": "",
          "authorTimestamp": "${new Date().toISOString()}",
          "created": "${new Date().toISOString()}",
        }
  result: 
  next: returnResult

return_result:
  return: ${formatMessage.response.body}